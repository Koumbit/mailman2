#!/bin/sh -e
# $URL$
# $Id$

if [ "$1" = "install" ]; then
	if ! id -g list > /dev/null 2>&1 ; then
		addgroup --system list
	fi
	if ! id -u list > /dev/null 2>&1 ; then
		adduser --system --home /var/list --ingroup list list
		chsh -s /bin/sh list
	fi
fi

if [ "$1" = "install" ] || [ "$1" = "upgrade" ]; then
	if [ -d /var/lib/mailman/logs ] && [ ! -L /var/lib/mailman/logs ] ; then
		echo "New logs will be generated in /var/log/mailman"
	fi
fi

if [ "$1" = "upgrade" ] && dpkg --compare-versions "$2" lt 2.1; then
    # upgrading, make sure the qfiles directory is empty.
    if ls /var/lib/mailman/qfiles 2>/dev/null | grep -q '.*' ; then
        # uh-oh.
        echo "Queue not cleared, please flush mailman queue and retry upgrade"
        exit 1
    fi
fi

mm_home=/var/lib/mailman
pythonlib=${mm_home}/pythonlib

if [ -d ${pythonlib} ] && [ "$(ls -A ${pythonlib})" != "" ] ; then
    cat <<EOF 
You have a non-empty ${pythonlib}, possibly caused by an incomplete
removal of an ancient mailman version.  In any case it's contents may
lead to mailman failing in obscure ways.

If you want it to be moved to ${pythonlib}.obsolete.$$ now, answer Y
to the following question, any other response will abort installation
and give you the opportunity to examine the situation.
EOF
    read -p "Move ${pythonlib} out of the way? [yN] " ans
    case $ans in
        y|Y)  mv ${pythonlib} ${pythonlib}.obsolete.$$
            ;;
        *) exit 1
            ;;
    esac
fi

# Before unpacking make sure no symlink cruft is left in ${mm_home}
for d in Mailman bin cron mail pythonlib scripts ; do
    if [ -L ${mm_home}/${d} ]; then
        rm -f ${mm_home}/${d}
    fi
done


#DEBHELPER#

exit 0
